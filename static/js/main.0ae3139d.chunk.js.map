{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","CardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCQCQ,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACxB,OACC,sBAAKC,UAAU,qDAAf,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,gBACpB,gCACC,6BAAKA,IACL,6BAAKC,IACL,6BAAKC,WCWMI,EAjBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACZC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACvC,OAAQ,cAAC,EAAD,CAEPX,GAAIO,EAAOI,GAAGX,GACZC,KAAMM,EAAOI,GAAGV,KAChBC,MAAOK,EAAOI,GAAGT,OAHdS,MAOP,OACA,8BACEH,KCFYI,EAXG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKX,UAAU,MAAf,SACA,uBAAQA,UAAU,mCAChBY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCMCI,EARA,SAACC,GACf,OACC,sBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,UACEJ,EAAMK,SADR,QCyCaC,E,kDA1Cd,aAAe,IAAD,8BACb,gBAcDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAdzC,EAAKC,MAAQ,CACXxB,OAAQ,GACRM,YAAa,IAJF,E,gEASO,IAAD,OACnBmB,MAAM,8CACLvC,MAAK,SAAAwC,GAAQ,OAAIA,EAASC,UAC1BzC,MAAK,SAAA0C,GAAK,OAAI,EAAKP,SAAS,CAACrB,OAAQ4B,S,+BAO9B,IAAD,EACuBC,KAAKL,MAA5BxB,EADA,EACAA,OAAQM,EADR,EACQA,YACTwB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACpC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS5B,EAAY2B,kBAEtD,OAAIJ,KAAKL,MAAMxB,OAAOmC,OAMrB,sBAAKvC,UAAU,KAAf,UACC,oBAAIA,UAAU,QAAd,yBACA,cAAC,EAAD,CAAWW,aAAcsB,KAAKV,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUnB,OAAQ8B,SATb,gD,GA1BQM,a,MCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,8BACC,cAAC,EAAD,QAGDC,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.0ae3139d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({id, name, email}) => {\n\treturn(\n\t\t<div className='tc bg-light-gray dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t<img alt='robots' src={`https://robohash.org/${id}??set=set4`}/>\n\t\t\t<div>\n\t\t\t\t<h2>{id}</h2>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<h2>{email}</h2>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\tconst CardComponent = robots.map((user, i) => {\n\t\treturn( <Card \n\t\t\tkey={i}\n\t\t\tid={robots[i].id} \n\t  \t\tname={robots[i].name} \n\t  \t\temail={robots[i].email} />\n\t  \t\t);\n\t})\n\n\treturn(\n\t<div>\n\t\t{CardComponent}\n  \t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\treturn(\n\t\t<div className='pa2'>\n\t\t<input  className='pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='Search robots'\n\t\t\t\tonChange={searchChange} />\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\n/*\nprops\nstate\nchildren <---\n*/\nconst Scroll = (props) => {\n\treturn(\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n\t\t\t{props.children};\n\t\t</div>\n\t);\n}\n\nexport default Scroll;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport {robots} from '../components/robots';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t\trobots: [],\n\t\t\t\tsearchfield: ''\t\t\t\n\t\t}\n\t}\n\n\t//React Life Cycle Methods (Mounting, Updating, Unmounting)\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({robots: users}));\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield: event.target.value});\n\t}\n\n\trender(){\n\t\tconst {robots, searchfield} = this.state;\n\t\tconst filteredRobots = robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t});\n\t\tif(!this.state.robots.length){\n\t\t\treturn <h1>Loading...</h1>\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn(\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1 tc'>RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\n\t\t\t\t<Scroll>\n\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t);\t\n\t\t}\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  <div>\n  \t<App />\n  </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}